name: Check Links

on:
  schedule:
    # Run monthly on the 1st at 9 AM UTC
    - cron: '0 9 1 * *'
  workflow_dispatch: # Allow manual trigger
  pull_request:
    paths:
      - 'README.md'
      - 'CONTRIBUTING.md'

jobs:
  link-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install markdown-link-check
        run: npm install -g markdown-link-check

      - name: Check links in README.md
        run: |
          markdown-link-check README.md \
            --config .github/workflows/link-check-config.json \
            --quiet || echo "README link check completed with issues"

      - name: Check links in CONTRIBUTING.md
        run: |
          markdown-link-check CONTRIBUTING.md \
            --config .github/workflows/link-check-config.json \
            --quiet || echo "CONTRIBUTING link check completed with issues"

      - name: Create issue for broken links
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `ðŸ”— Broken Links Detected - ${new Date().toISOString().split('T')[0]}`;
            const body = `
            ## Broken Links Detected
            
            The automated link checker has found broken or inaccessible links in the repository.
            
            **Action Required:**
            - Review the workflow logs to identify broken links
            - Update or remove broken links
            - Consider using archived versions (archive.org) for important but unavailable resources
            
            **Links to check:**
            - All links in README.md
            - All links in CONTRIBUTING.md
            
            This issue was automatically created by the link checker workflow.
            
            ---
            *If this is a false positive (e.g., rate limiting, temporary outage), you can close this issue.*
            `;
            
            // Check if an issue already exists
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'broken-links'
            });
            
            if (existingIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['broken-links', 'maintenance']
              });
            }